build:
  image: python:3
  stage: build
  before_script:
    - apt install -y git
    - git config submodule.pyoscal.url https://${GITLAB_USER}:${GITLAB_PASS}@gitlab.com/shrgroup/oss/python/pyoscal.git
    - git submodule update --init --recursive
    - bash update_oscal.sh
    - pip install -r requirements.txt
  script:
    - python parse_meta.py
  artifacts:
    when: always
    paths:
      - "*"
      - pyoscal/

unittest:
  image: python:3
  stage: test 
  dependencies:
    - build
  before_script:
    - pip install -r requirements.txt
  script:
    - python unit_test.py
  artifacts:
    when: always
    paths:
      - "*"

package:
  stage: deploy
  image: python:3
  variables:
    TWINE_REPOSITORY_URL: https://gitlab.com/api/v4/projects/25562350/packages/pypi
    TWINE_USERNAME: $GITLAB_USER
    TWINE_PASSWORD: $GITLAB_PASS
  before_script:
    - pip install twine wheel
  script:
    - cd pyoscal
    - sed -i "s/version=\"0\.9\..*\"/version=\"0\.9\.${CI_JOB_ID}\"/g" setup.py #update version
    - python setup.py bdist_wheel
    - python -m twine upload dist/*.whl --verbose
  only: # Only Publish Master on Main Repo (not forks)
    - master@shrgroup/oss/python/pyoscal-builder

publish:
  image:
    name: alpine/git:latest
    entrypoint: [""]
  stage: deploy
  dependencies:
    - build
  script:
    - git submodule update
    - cd pyoscal/
    - git config --global user.email "${GITLAB_USER_EMAIL}"
    - git config --global user.name "${GITLAB_USER_ID}"
    - git add pyoscal/
    - git commit -m "$(git log -1 --pretty=%B)"
    - git push origin HEAD:master --force
  artifacts:
    when: always
    paths:
      - "*"
      - pyoscal/
  only: # Only Publish Master on Main Repo (not forks)
    - master@shrgroup/oss/python/pyoscal-builder




    
